---
# Vivaldi Browser installation via APT repository

- name: Add Vivaldi GPG key
  get_url:
    url: https://repo.vivaldi.com/archive/linux_signing_key.pub
    dest: /tmp/vivaldi-signing-key.pub
    mode: '0644'
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Import Vivaldi GPG key
  shell: |
    gpg --dearmor < /tmp/vivaldi-signing-key.pub > /usr/share/keyrings/vivaldi.gpg
  args:
    creates: /usr/share/keyrings/vivaldi.gpg
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Add Vivaldi APT repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/vivaldi.gpg] https://repo.vivaldi.com/archive/deb/ stable main"
    filename: vivaldi
    state: present
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Update APT cache
  apt:
    update_cache: yes
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Install Vivaldi browser
  apt:
    name: vivaldi-stable
    state: present
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Clean up GPG key file
  file:
    path: /tmp/vivaldi-signing-key.pub
    state: absent
  when: app_states['vivaldi'] | default('present') == 'present'

# 1Password Integration for Vivaldi Browser
- name: Create 1Password config directory
  file:
    path: /etc/1password
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Add Vivaldi to 1Password allowed browsers
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi
    create: yes
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Add Vivaldi-stable to 1Password allowed browsers
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi-stable
    create: yes
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Add Vivaldi-bin to 1Password allowed browsers
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi-bin
    create: yes
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Deploy Vivaldi command-line flags configuration
  template:
    src: vivaldi-stable.conf.j2
    dest: "{{ user.home }}/.config/vivaldi-stable.conf"
    owner: "{{ user.name }}"
    mode: '0644'
  when: app_states['vivaldi'] | default('present') == 'present'

# Generate COSMIC themes for Vivaldi (both Dark and Light)
- name: Ensure extras/themes/vivaldi directories exist in repo
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  become: false
  loop:
    - "{{ playbook_dir }}/extras/themes/vivaldi"
    - "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark-build"
    - "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light-build"
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Copy theme assets for Dark theme
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark-build/{{ item }}"
    mode: '0644'
  become: false
  loop:
    - Back.svg
    - BreakMode.svg
    - COMMAND_ckqjdk4o7000001l58zh17egm.svg
    - COMMAND_ckqjhvf430003c5429ni7i7bz.svg
    - COMMAND_ckqkoqycf0003wv4210uduu8n.svg
    - CalendarStatus.svg
    - CaptureImages.svg
    - Clock.svg
    - DownloadButton.svg
    - Extensions.svg
    - FastForward.svg
    - Forward.svg
    - Home.svg
    - ImagesToggle.svg
    - MailStatus.svg
    - PageActions.svg
    - PanelBookmarks.svg
    - PanelCalendar.svg
    - PanelContacts.svg
    - PanelDownloads.svg
    - PanelFeeds.svg
    - PanelHistory.svg
    - PanelMail.svg
    - PanelNotes.svg
    - PanelReadingList.svg
    - PanelSession.svg
    - PanelTasks.svg
    - PanelToggle.svg
    - PanelTranslate.svg
    - PanelWeb.svg
    - PanelWindow.svg
    - Proxy.svg
    - ReadingList.svg
    - Reload.svg
    - Rewind.svg
    - SearchField.svg
    - Settings.svg
    - Stop.svg
    - SyncStatus.svg
    - TilingToggle.svg
    - UpdateButton.svg
    - WorkspaceButton.svg
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Copy theme assets for Light theme
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light-build/{{ item }}"
    mode: '0644'
  become: false
  loop:
    - Back.svg
    - BreakMode.svg
    - COMMAND_ckqjdk4o7000001l58zh17egm.svg
    - COMMAND_ckqjhvf430003c5429ni7i7bz.svg
    - COMMAND_ckqkoqycf0003wv4210uduu8n.svg
    - CalendarStatus.svg
    - CaptureImages.svg
    - Clock.svg
    - DownloadButton.svg
    - Extensions.svg
    - FastForward.svg
    - Forward.svg
    - Home.svg
    - ImagesToggle.svg
    - MailStatus.svg
    - PageActions.svg
    - PanelBookmarks.svg
    - PanelCalendar.svg
    - PanelContacts.svg
    - PanelDownloads.svg
    - PanelFeeds.svg
    - PanelHistory.svg
    - PanelMail.svg
    - PanelNotes.svg
    - PanelReadingList.svg
    - PanelSession.svg
    - PanelTasks.svg
    - PanelToggle.svg
    - PanelTranslate.svg
    - PanelWeb.svg
    - PanelWindow.svg
    - Proxy.svg
    - ReadingList.svg
    - Reload.svg
    - Rewind.svg
    - SearchField.svg
    - Settings.svg
    - Stop.svg
    - SyncStatus.svg
    - TilingToggle.svg
    - UpdateButton.svg
    - WorkspaceButton.svg
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Extract COSMIC Dark theme colors
  ansible.builtin.shell: |
    export HOME="{{ user.home }}"
    extract-cosmic-colors Dark
  register: cosmic_colors_dark_raw
  changed_when: false
  become: false
  become_user: "{{ user.name }}"
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Parse COSMIC Dark theme colors
  ansible.builtin.set_fact:
    theme_colors_dark: "{{ cosmic_colors_dark_raw.stdout | from_json }}"
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Extract COSMIC Light theme colors
  ansible.builtin.shell: |
    export HOME="{{ user.home }}"
    extract-cosmic-colors Light
  register: cosmic_colors_light_raw
  changed_when: false
  become: false
  become_user: "{{ user.name }}"
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Parse COSMIC Light theme colors
  ansible.builtin.set_fact:
    theme_colors_light: "{{ cosmic_colors_light_raw.stdout | from_json }}"
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Generate Vivaldi Dark theme settings.json
  ansible.builtin.template:
    src: theme-settings-dark.json.j2
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark-build/settings.json"
    mode: '0644'
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Generate Vivaldi Light theme settings.json
  ansible.builtin.template:
    src: theme-settings-light.json.j2
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light-build/settings.json"
    mode: '0644'
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Create Vivaldi Dark theme ZIP file
  community.general.archive:
    path: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark-build/*"
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark.zip"
    format: zip
    remove: false
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Create Vivaldi Light theme ZIP file
  community.general.archive:
    path: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light-build/*"
    dest: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light.zip"
    format: zip
    remove: false
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Clean up Dark theme build directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-dark-build"
    state: absent
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

- name: Clean up Light theme build directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/extras/themes/vivaldi/cosmic-light-build"
    state: absent
  become: false
  when: app_states['vivaldi'] | default('present') == 'present'

# Cleanup when absent
- name: Remove Vivaldi browser when absent
  apt:
    name: vivaldi-stable
    state: absent
    purge: yes
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'

- name: Remove Vivaldi repository when absent
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/vivaldi.gpg] https://repo.vivaldi.com/archive/deb/ stable main"
    filename: vivaldi
    state: absent
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'

- name: Remove Vivaldi GPG key when absent
  file:
    path: /usr/share/keyrings/vivaldi.gpg
    state: absent
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'

- name: Remove Vivaldi from 1Password allowed browsers when absent
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi
    state: absent
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'
  failed_when: false

- name: Remove Vivaldi-stable from 1Password allowed browsers when absent
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi-stable
    state: absent
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'
  failed_when: false

- name: Remove Vivaldi-bin from 1Password allowed browsers when absent
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: vivaldi-bin
    state: absent
  become: yes
  when: app_states['vivaldi'] | default('present') == 'absent'
  failed_when: false

- name: Remove Vivaldi configuration file when absent
  file:
    path: "{{ user.home }}/.config/vivaldi-stable.conf"
    state: absent
  when: app_states['vivaldi'] | default('present') == 'absent'
