---
# Zen Browser installation via GitHub releases (native, for 1Password integration)

- name: Check current Zen Browser version
  shell: |
    if [ -f /opt/zen/zen ]; then
      /opt/zen/zen --version | grep -oP 'Zen Browser \K[0-9]+\.[0-9]+\.[0-9]+[a-z]?' || echo "unknown"
    else
      echo "not_installed"
    fi
  register: zen_current_version
  changed_when: false
  failed_when: false
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Get latest Zen Browser release info
  uri:
    url: https://api.github.com/repos/zen-browser/desktop/releases/latest
    return_content: yes
  register: zen_release_info
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Set Zen Browser version facts
  set_fact:
    zen_latest_version: "{{ zen_release_info.json.tag_name }}"
    zen_needs_update: "{{ zen_current_version.stdout == 'not_installed' or zen_current_version.stdout != zen_release_info.json.tag_name }}"
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Download Zen Browser tarball
  get_url:
    url: "https://github.com/zen-browser/desktop/releases/download/{{ zen_latest_version }}/zen.linux-x86_64.tar.xz"
    dest: "/tmp/zen-{{ zen_latest_version }}.tar.xz"
    mode: '0644'
  when:
    - app_states['zen-browser'] | default('present') == 'present'
    - zen_needs_update | bool
  become: yes

- name: Remove old Zen Browser installation
  file:
    path: /opt/zen
    state: absent
  become: yes
  when:
    - app_states['zen-browser'] | default('present') == 'present'
    - zen_needs_update | bool

- name: Extract Zen Browser tarball
  unarchive:
    src: "/tmp/zen-{{ zen_latest_version }}.tar.xz"
    dest: /opt
    remote_src: yes
    owner: root
    group: root
  become: yes
  when:
    - app_states['zen-browser'] | default('present') == 'present'
    - zen_needs_update | bool

- name: Create Zen Browser desktop entry
  copy:
    dest: /usr/share/applications/zen-browser.desktop
    mode: '0644'
    content: |
      [Desktop Entry]
      Version=1.0
      Name=Zen Browser
      Comment=Experience tranquillity while browsing the web
      Exec=/opt/zen/zen %u
      Icon=/opt/zen/browser/chrome/icons/default/default128.png
      Terminal=false
      Type=Application
      Categories=Network;WebBrowser;
      MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/vnd.mozilla.xul+xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;
      StartupNotify=true
      StartupWMClass=zen
  become: yes
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Create Zen Browser symlink
  file:
    src: /opt/zen/zen
    dest: /usr/local/bin/zen
    state: link
  become: yes
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Clean up downloaded tarball
  file:
    path: "/tmp/zen-{{ zen_latest_version }}.tar.xz"
    state: absent
  when:
    - app_states['zen-browser'] | default('present') == 'present'
    - zen_needs_update | bool
  become: yes

# 1Password Integration for Zen Browser
- name: Create 1Password config directory
  file:
    path: /etc/1password
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['zen-browser'] | default('present') == 'present'

- name: Add Zen Browser to 1Password allowed browsers
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: zen
    create: yes
    owner: root
    group: root
    mode: '0755'
  become: yes
  when: app_states['zen-browser'] | default('present') == 'present'

# Cleanup when absent
- name: Remove Zen Browser symlink when absent
  file:
    path: /usr/local/bin/zen
    state: absent
  become: yes
  when: app_states['zen-browser'] | default('present') == 'absent'

- name: Remove Zen Browser desktop entry when absent
  file:
    path: /usr/share/applications/zen-browser.desktop
    state: absent
  become: yes
  when: app_states['zen-browser'] | default('present') == 'absent'

- name: Remove Zen Browser installation when absent
  file:
    path: /opt/zen
    state: absent
  become: yes
  when: app_states['zen-browser'] | default('present') == 'absent'

- name: Remove Zen Browser from 1Password allowed browsers when absent
  lineinfile:
    path: /etc/1password/custom_allowed_browsers
    line: zen
    state: absent
  become: yes
  when: app_states['zen-browser'] | default('present') == 'absent'
  failed_when: false
