# Development Workflow Justfile
# Standalone justfile for development activities
# Use via 'jdev' command from anywhere

{% raw %}
# Default recipe - show available commands
default:
    @just --justfile /usr/local/share/just/dev.just --list

# ============================================================================
# GIT OPERATIONS
# ============================================================================

# Create an interactive git commit with emoji using gum
commit:
    #!/usr/bin/env bash
    set -euo pipefail

    if ! command -v git-commit-gum &> /dev/null; then
        echo "❌ Error: git-commit-gum is not installed"
        exit 1
    fi

    cd "{{ invocation_directory() }}"
    git-commit-gum

# Show git status in a clean format
status:
    @git -C "{{ invocation_directory() }}" status --short --branch

# Show git log with a clean format
log LIMIT="10":
    @git -C "{{ invocation_directory() }}" log --oneline --decorate --graph -n {{ LIMIT }}

# Show changes not yet staged
diff:
    @git -C "{{ invocation_directory() }}" diff

# Show staged changes
diff-staged:
    @git -C "{{ invocation_directory() }}" diff --staged

# Stage all changes
stage-all:
    @git -C "{{ invocation_directory() }}" add -A
    @echo "✓ All changes staged"

# Unstage all changes
unstage-all:
    @git -C "{{ invocation_directory() }}" reset HEAD
    @echo "✓ All changes unstaged"

# Amend the last commit
amend:
    @git -C "{{ invocation_directory() }}" commit --amend --no-edit
    @echo "✓ Last commit amended"

# Interactive rebase for last N commits
rebase-interactive N="10":
    @git -C "{{ invocation_directory() }}" rebase -i HEAD~{{ N }}

# ============================================================================
# PROJECT HELPERS
# ============================================================================

# Find files by name pattern
find PATTERN:
    @find . -type f -name "{{ PATTERN }}" | grep -v node_modules | grep -v .git

# Search for text in files
search TEXT:
    @rg --pretty "{{ TEXT }}" || echo "No matches found"

# Count lines of code in current directory
loc:
    @echo "Lines of code by language:"
    @tokei "{{ invocation_directory() }}" 2>/dev/null || echo "Install tokei for detailed stats: cargo install tokei"
{% endraw %}
