---
# tasks file for zsh
- name: system/zsh - installing shell
  become: yes
  ansible.builtin.apt:
    pkg:
      - git
      - zsh
      - fonts-powerline
      - powerline
      - direnv
      - zoxide
      - bat
      - exa
      - fd-find
    state: present
  register: install_zsh

- name: system/zsh - setup folders
  file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
  with_items:
    - "{{SYSTEM_HOME }}/.config/zsh"
    - "{{SYSTEM_HOME }}/.zim"
    - "{{SYSTEM_HOME }}/.bookmarks"
    # - "{{SYSTEM_HOME }}/code"
    - "{{SYSTEM_HOME }}/tmp"

- name: system/zsh - change current user shell
  become: yes
  user:
    name: "{{ SYSTEM_USER }}"
    shell: /usr/bin/zsh

- name: system/zsh - get latest release version of starship from github
  github_release:
    user: starship
    repo: starship
    action: latest_release
    token: "{{ GITHUB_TOKEN }}"
  register: starship_release

# Had to see the format returned.
# JSON
# - debug: msg="{{ starship_release.tag }}"

- name: system/zsh - download & extract starship tgz
  become: yes
  ansible.builtin.unarchive:
    src: "https://github.com/starship/starship/releases/download/{{ starship_release.tag }}/starship-x86_64-unknown-linux-gnu.tar.gz"
    dest: /usr/local/bin
    remote_src: yes

- name: system/zsh - placing .zshrc
  copy:
    src: ../files/home/.zshrc
    dest: "{{SYSTEM_HOME }}/.zshrc"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"

- name: system/zsh - placing .zimrc
  copy:
    src: ../files/home/.zimrc
    dest: "{{SYSTEM_HOME }}/.zimrc"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"

# ####
- name: system/zsh - placing zsh function files
  ansible.posix.synchronize:
    src: ../files/home/.config/zsh/
    dest: "{{SYSTEM_HOME}}/.config/zsh"

- name: system/zsh - placing zim files
  ansible.posix.synchronize:
    src: ../files/home/.zim/
    dest: "{{SYSTEM_HOME}}/.zim"

- name: system/zsh - run zimfw
  ansible.builtin.shell: zimfw.zsh install
  args:
    chdir: /home/dustin/.zim/

- name: system/zsh - create shell bookmark for dev
  ansible.builtin.file:
    src: "{{SYSTEM_HOME }}/dev"
    dest: "{{SYSTEM_HOME }}/.bookmarks/@dev"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
    state: link
    mode: "0700"

- name: system/zsh - create shell bookmark for sysdig-dev
  ansible.builtin.file:
    src: "{{SYSTEM_HOME }}/dev/sysdig"
    dest: "{{SYSTEM_HOME }}/.bookmarks/@sysdig"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
    state: link
    mode: "0700"

- name: system/zsh - create shell bookmark for tmp
  ansible.builtin.file:
    src: "{{SYSTEM_HOME }}/tmp"
    dest: "{{SYSTEM_HOME }}/.bookmarks/@tmp"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
    state: link
    mode: "0700"

- name: system/zsh - create shell bookmark for Downloads
  ansible.builtin.file:
    src: "{{SYSTEM_HOME }}/Downloads"
    dest: "{{SYSTEM_HOME }}/.bookmarks/@Downloads"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
    state: link
    mode: "0700"

- name: system/zsh - create shell bookmark for config
  ansible.builtin.file:
    src: "{{SYSTEM_HOME }}/.config"
    dest: "{{SYSTEM_HOME }}/.bookmarks/@config"
    owner: "{{ SYSTEM_USER }}"
    group: "{{ SYSTEM_USER }}"
    state: link
    mode: "0700"

- name: system/zsh - batcat bat
  become: yes
  ansible.builtin.file:
    src: /usr/bin/batcat
    dest: /usr/bin/bat
    owner: root
    group: root
    state: link
